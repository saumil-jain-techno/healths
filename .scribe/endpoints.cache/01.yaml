## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User management'
description: 'APIs for managing users'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/user/register
    metadata:
      groupName: 'User management'
      groupDescription: 'APIs for managing users'
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
      Api-Version: v2
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The id of the user.'
        required: true
        example: Saumil
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: test@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 'Saumil#Jain@123'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image:
        name: image
        description: 'The image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: Saumil
      email: test@example.com
      password: 'Saumil#Jain@123'
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users/index
    metadata:
      groupName: 'User management'
      groupDescription: 'APIs for managing users'
      subgroup: ''
      subgroupDescription: ''
      title: 'Listing of users.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Api-Version: v2
      Authorization: incidunt
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/edit/{id}'
    metadata:
      groupName: 'User management'
      groupDescription: 'APIs for managing users'
      subgroup: ''
      subgroupDescription: ''
      title: 'Edit a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Api-Version: v2
      Authorization: qui
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/update
    metadata:
      groupName: 'User management'
      groupDescription: 'APIs for managing users'
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
      Api-Version: v2
      Authorization: repellendus
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The id of the user.'
        required: true
        example: Saumil
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: test@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image:
        name: image
        description: 'The image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: Saumil
      email: test@example.com
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/destroy/{id}'
    metadata:
      groupName: 'User management'
      groupDescription: 'APIs for managing users'
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Api-Version: v2
      Authorization: corporis
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
